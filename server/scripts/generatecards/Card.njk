{%- macro playerAbilityParams(ability, defaultTarget=null) -%}
    {%- if ability.targetPlayer and ability.targetPlayer !== defaultTarget -%}
(context) => ({
        {%- if ability.targetPlayer === 'self' -%}
    target: context.player,
        {%- else -%}
    target: context.player.opponent,
        {%- endif -%}
    amount: {{ability.quantity}}
    {%- else -%}
{{ability.quantity}}
    {%- endif -%}
{%- endmacro -%}

{%- macro effectMacro(effect) -%}
    {%- if effect.name == 'gainAmber' -%}
ability.actions.gainAmber({{ playerAbilityParams(effect, defaultTarget='you') }})
    {%- elif effect.name == 'captureAmber' -%}
ability.actions.capture({{ playerAbilityParams(effect, defaultTarget='you') }})
    {%- elif effect.name == 'stealAmber' -%}
ability.actions.steal({{ playerAbilityParams(effect, defaultTarget='you') }})
    {%- elif effect.name == 'loseAmber' -%}
ability.actions.loseAmber({{ playerAbilityParams(effect, defaultTarget='opponent') }})
    {%- elif effect.name == 'dealDamage' -%}
ability.actions.dealDamage({ amount: {{effect.quantity}} })
    {%- else -%}
        /*{{ effect | dump(2) | safe}}*/
    {%- endif -%}
{%- endmacro -%}

{%- macro targetMacro(target) -%}
{%- if target.type != null -%}
cardType: '{{target.type}}',
{% endif -%}
{%- if target.controller != null -%}
controller: '{{target.controller}}',
{% endif -%}
{%- endmacro -%}

{%- macro abilityMacro(ability) -%}
    {%- if (ability.name == 'bold') -%}
        {%- if ability.trigger == 'Reap' -%}
this.reap({
        {%- elif ability.trigger == 'Fight' -%}
this.fight({
        {%- elif ability.trigger == 'Destroyed' -%}
this.destroyed({
        {%- elif ability.trigger == 'Play'-%}
this.play({
        {%- elif ability.trigger == 'Omni'-%}
this.omni({
        {%- elif ability.trigger == 'Before Fight'-%}
this.beforefight({
        {%- elif ability.trigger == 'Action'-%}
this.action({
        {%- else -%}
this.unknown( //{{ ability.trigger }}
        {%- endif %}
        {%- for extraTrigger in ability.extraTriggers %}
    {{extraTrigger | lower}}: true,
        {%- endfor %}
    {%- if ability.effect.target != null %}
    target: {
        {{targetMacro(ability.effect.target) | indent(8) -}}
        gameAction: {{ effectMacro(ability.effect) }}
    }
    {%- else %}
    gameAction: {{ effectMacro(ability.effect) }}
    {%- endif %}
});
    {%- elif ability.name == 'keywords' -%}
//Keywords: {{ ability.keywords.join(", ") }}
    {%- elif ability.name == 'gainAmber' -%}
ability.actions.gainAmber({{ params(ability, defaultTarget='you') }})
    {%- elif ability.name == 'captureAmber' -%}
ability.actions.capture({{ params(ability, defaultTarget='you') }})
    {%- elif ability.name == 'stealAmber' -%}
ability.actions.steal({{ params(ability, defaultTarget='you') }})
    {%- elif ability.name == 'loseAmber' -%}
ability.actions.loseAmber({{ params(ability, defaultTarget='opponent') }})
    {%- else -%}
        /*{{ ability | dump(2) | safe}}*/
    {%- endif -%}
{%- endmacro -%}

const Card = require('../../Card.js');

class {{ name }} extends Card {
    setupCardAbilities(ability) {
        {%- for ability in abilities %}
        {{abilityMacro(ability) | indent(8)}}
        {%- endfor %}
    }
}

{{name}}.id = '{{card.id}}';

module.exports = {{name}};
